stages:
  - build   # create the container
  - test    # check its contents
  - deploy  # publish it

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'parent_pipeline'

variables:
  name: UNNAMED
  path: containers/$name
  image_under_test: $CI_REGISTRY_IMAGE/$name:build-$CI_PIPELINE_IID

build:
  needs: [ ]
  stage: build

  variables:
    GODEBUG: "http2client=0"  # https://github.com/GoogleContainerTools/kaniko/issues/2751

  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]

  script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"$(echo -n $CI_DEPENDENCY_PROXY_SERVER | awk -F[:] '{print $1}')\":{\"auth\":\"$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "$path"
      --dockerfile "$path/Dockerfile"
      --cache
      --registry-mirror "$CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX"
      --destination "$image_under_test"

  interruptible: true

publish:
  # don't use needs because we want to wait for all jobs in the test phase
  stage: deploy

  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]

  variables:
    image: $name
    new_version: $version  # defined in the parent pipeline

  script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - crane tag "$image_under_test" "$new_version"

  interruptible: false
